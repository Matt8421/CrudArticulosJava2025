package ejercicios25255Agosto;

import java.util.ArrayList;    //Para usar ArrayList en lugar de arrays fijos
import java.util.Scanner;      //Para leer datos del usuario desde la consola

public class GestorArticulos {
     // ==========================
    // Variables globales
    // ==========================

    // ArrayList que guardar√° los art√≠culos como Strings din√°micos
    static ArrayList<String> listaArticulos = new ArrayList<>();

    // Scanner para leer datos de teclado
    static Scanner entrada = new Scanner(System.in);

    // M√©todo principal que se ejecuta al correr el programa
    public static void main(String[] args) {
        int opcion = 0; // variable para almacenar la opci√≥n elegida por el usuario

        System.out.println("=== Sistema de Gesti√≥n de Art√≠culos ===");
        // ==========================
        // Bucle principal del men√∫
        // ==========================
        while (opcion != 6) { // El men√∫ se repetir√° hasta que la opci√≥n sea 6 (Salir)
            mostrarMenu(); // Llamamos al m√©todo que imprime el men√∫ en pantalla

            // Leemos la opci√≥n del usuario
            opcion = entrada.nextInt();
            entrada.nextLine(); // limpiamos el buffer para evitar errores al leer Strings

            // Estructura switch para decidir qu√© acci√≥n ejecutar seg√∫n la opci√≥n elegida
            switch (opcion) {
                case 1:
                    agregarArticulo(); // Llamamos al m√©todo para crear un art√≠culo
                    break;
                case 2:
                    modificarArticulo(); // Llamamos al m√©todo para modificar un art√≠culo existente
                    break;
                case 3:
                    mostrarArticulo(); // Llamamos al m√©todo para listar un art√≠culo en base a su posici√≥n
                    break;
                case 4:
                    mostrarTodos(); // Llamamos al m√©todo para listar todos los art√≠culos
                    break;
                case 5:
                    eliminarArticulo(); // Llamamos al m√©todo para eliminar un art√≠culo
                    break;
                case 6:
                    // Mensaje de despedida
                    System.out.println("üëã ¬°Gracias por usar el sistema!");
                    break;
                default:
                    // Si la opci√≥n no est√° entre 1 y 6, mostramos error
                    System.out.println("‚ùå Opci√≥n inv√°lida.");
            }
        }
    }

    // ==========================
    // M√©todos propios del CRUD
    // ==========================

    // M√©todo para mostrar el men√∫ en pantalla
    public static void mostrarMenu() {
        System.out.println("\n===== MEN√ö DE ART√çCULOS =====");
        System.out.println("1. Agregar art√≠culo");
        System.out.println("2. Modificar art√≠culo");
        System.out.println("3. Mostrar art√≠culo por posici√≥n");
        System.out.println("4. Mostrar todos los art√≠culos");
        System.out.println("5. Eliminar art√≠culo");
        System.out.println("6. Salir");
        System.out.print("Elija una opci√≥n: ");
    }

    // M√©todo para crear un nuevo art√≠culo
    public static void agregarArticulo() {
        System.out.print("Ingrese el nombre del art√≠culo: ");
        String nuevo = entrada.nextLine(); // Leemos el nombre ingresado

        // Validamos que no est√© vac√≠o
        if (nuevo.trim().isEmpty()) {
            System.out.println("‚ùå El nombre no puede estar vac√≠o.");
            return; // Salimos del m√©todo si la validaci√≥n falla
        }

        // Agregamos el art√≠culo al ArrayList
        listaArticulos.add(nuevo);
        System.out.println("‚úÖ Art√≠culo agregado correctamente.");
    }

    // M√©todo para modificar un art√≠culo
    public static void modificarArticulo() {
        // Validamos si la lista est√° vac√≠a
        if (listaArticulos.isEmpty()) {
            System.out.println("‚ùå No hay art√≠culos para modificar.");
            return;
        }

        // Mostramos todos los art√≠culos antes de modificar
        mostrarTodos();
        System.out.print("Ingrese la posici√≥n a modificar (0 a " + (listaArticulos.size() - 1) + "): ");
        int pos = entrada.nextInt(); // Leemos la posici√≥n
        entrada.nextLine(); // limpiamos el buffer

        // Validamos que la posici√≥n exista en el ArrayList
        if (pos < 0 || pos >= listaArticulos.size()) {
            System.out.println("‚ùå Posici√≥n inv√°lida.");
            return;
        }

        // Pedimos el nuevo nombre para reemplazar
        System.out.print("Ingrese el nuevo nombre: ");
        String modificado = entrada.nextLine();

        // Validamos que no sea vac√≠o
        if (modificado.trim().isEmpty()) {
            System.out.println("‚ùå El nombre no puede estar vac√≠o.");
            return;
        }

        // Reemplazamos el valor en la posici√≥n indicada
        listaArticulos.set(pos, modificado);
        System.out.println("‚úÖ Art√≠culo modificado correctamente.");
    }

    // M√©todo para mostrar un art√≠culo por posici√≥n
    public static void mostrarArticulo() {
        // Si la lista est√° vac√≠a no se puede mostrar nada
        if (listaArticulos.isEmpty()) {
            System.out.println("‚ùå No hay art√≠culos cargados.");
            return;
        }

        // Pedimos la posici√≥n a consultar
        System.out.print("Ingrese la posici√≥n a consultar (0 a " + (listaArticulos.size() - 1) + "): ");
        int pos = entrada.nextInt();
        entrada.nextLine();

        // Validamos que la posici√≥n exista
        if (pos < 0 || pos >= listaArticulos.size()) {
            System.out.println("‚ùå Posici√≥n inv√°lida.");
            return;
        }

        // Mostramos el art√≠culo en esa posici√≥n
        System.out.println("üì¶ Art√≠culo en posici√≥n " + pos + ": " + listaArticulos.get(pos));
    }

    // M√©todo para listar todos los art√≠culos
    public static void mostrarTodos() {
        // Si la lista est√° vac√≠a no hay nada que mostrar
        if (listaArticulos.isEmpty()) {
            System.out.println("‚ùå No hay art√≠culos cargados.");
            return;
        }

        System.out.println("===== LISTADO DE ART√çCULOS =====");
        // Recorremos el ArrayList y mostramos cada posici√≥n con su contenido
        for (int i = 0; i < listaArticulos.size(); i++) {
            System.out.println("Posici√≥n " + i + ": " + listaArticulos.get(i));
        }
    }

    // M√©todo para eliminar un art√≠culo
    public static void eliminarArticulo() {
        // Si la lista est√° vac√≠a no hay nada que borrar
        if (listaArticulos.isEmpty()) {
            System.out.println("‚ùå No hay art√≠culos para eliminar.");
            return;
        }

        // Mostramos todos antes de eliminar para que el usuario elija
        mostrarTodos();
        System.out.print("Ingrese la posici√≥n del art√≠culo a eliminar (0 a " + (listaArticulos.size() - 1) + "): ");
        int pos = entrada.nextInt();
        entrada.nextLine();

        // Validamos que la posici√≥n sea v√°lida
        if (pos < 0 || pos >= listaArticulos.size()) {
            System.out.println("‚ùå Posici√≥n inv√°lida.");
            return;
        }

        // Eliminamos el art√≠culo de la lista
        listaArticulos.remove(pos);
        System.out.println("‚úÖ Art√≠culo eliminado.");
    }
    // method eliminar articulo por nombre
    // public static void eliminarArticuloPorNombre() {
    //     if (listaArticulos.isEmpty()) {
    //         System.out.println("‚ùå No hay art√≠culos para eliminar.");
    //         return;
    //     }   
    //     System.out.print("Ingrese el nombre del art√≠culo a eliminar: ");
    //     String nombre = entrada.nextLine();
    //     boolean eliminado = listaArticulos.remove(nombre);
    //     if (eliminado) {
    //         System.out.println("‚úÖ Art√≠culo eliminado.");
    //     } else {
    //         System.out.println("‚ùå Art√≠culo no encontrado.");
    //     }

}
  //Revision pre-entrega. Falta ver las funciones flecha en el switch